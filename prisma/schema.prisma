generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//pour la newsletter
model newsletter {
  id               Int     @id @default(autoincrement())
  email            String  @unique
  unsubscribeToken String?
}

model user {
  id            Int            @id @default(autoincrement())
  nom           String
  prenom        String
  email         String         @unique
  phone         String         @unique
  hashPassword  String
  role          String
  profileImages profileImage[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt

  // <--
  stripeAccountId        String?
  stripeAccountCompleted Boolean       @default(false)
  // -->
  temoignages            temoignages[]
  produits               produits[]
}

model profileImage {
  id     Int    @id @default(autoincrement())
  path   String
  userId Int
  user   user   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

//pour les t√©moignages
model temoignages {
  id          Int     @id @default(autoincrement())
  temoignage  String
  noteAgroNet Int
  ville       String?
  pays        String?
  userId      Int
  user        user    @relation(fields: [userId], references: [id])
}

//pour les produits 
model produits {
  id                Int        @id @default(autoincrement())
  designation       String
  provenance        String
  quantite          Int
  unite             unite
  uniteTemps        uniteTemps
  dateRecolte       DateTime
  dureeConservation Int
  categorie         categories
  type              String
  user              user?      @relation(fields: [userId], references: [id])
  userId            Int?
}

enum categories {
  Vivrieres
  Fourrageres
  Laitiers
  Ovoproduits
  Carnes
  Apicoles
  Aquacoles
  Industrielles_rente
}

enum unite {
  Kg
  g
  L
  caisse
  unite
  boite
}

enum uniteTemps {
  an
  mois
  semaine
  jour
}
